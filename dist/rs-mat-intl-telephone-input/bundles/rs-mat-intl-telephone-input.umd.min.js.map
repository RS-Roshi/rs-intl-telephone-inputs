{"version":3,"sources":["../../../projects/rs-mat-intl-telephone-input/src/lib/rs-mat-intl-telephone-input.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/rs-mat-intl-telephone-input/src/lib/data/country-code.ts","../../../projects/rs-mat-intl-telephone-input/src/lib/validators/phoneNumber.validator.ts","../../../projects/rs-mat-intl-telephone-input/src/lib/pipes/search.pipe.ts","../../../projects/rs-mat-intl-telephone-input/src/lib/rs-mat-intl-telephone-input.component.html","../../../projects/rs-mat-intl-telephone-input/src/lib/rs-mat-intl-telephone-input.component.ts","../../../projects/rs-mat-intl-telephone-input/src/lib/rs-mat-intl-telephone-input.module.ts"],"names":["RsMatIntlTelephoneInputService","factory","ɵfac","providedIn","Injectable","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","CountryCode","this","allCountries","Examples","001","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","phoneNumberValidator","control","numberInstance","error","validatePhoneNumber","value","parsePhoneNumber","e","setValue","isValid","touched","markAsTouched","SearchPipe","transform","country","searchCriteria","name","dialCode","toLowerCase","includes","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","$event","stopPropagation","i0.ɵɵproperty","ctx_r2","searchPlaceholder","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵtextInterpolate2","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","pure","Pipe","NgxMatIntlTelInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","RsMatIntlTelephoneInputComponent","countryCodeData","fm","elRef","_this","_super","preferredCountries","enablePlaceholder","inputPlaceholder","cssClass","onlyCountries","errorStateMatcher","ErrorStateMatcher","enableSearch","_required","_disabled","stateChanges","Subject","focused","id","nextId","describedBy","phoneNumber","preferredCountriesInDropDown","countryChanged","EventEmitter","_format","onTouched","propagateChange","_","monitor","subscribe","origin","next","fetchCountryData","valueAccessor","TypeError","String","__","constructor","__extends","defineProperty","formattedPhoneNumber","getPhoneNumberPlaceHolder","countryISOCode","getExampleNumber","number","toString","ngOnInit","length","forEach","iso2","preferredCountry","filter","c","shift","push","selectedCountry","getCountry","emit","ngDoCheck","updateErrorState","onPhoneNumberChange","parsePhoneNumberFromString","toUpperCase","formatAsYouTypeIfEnabled","onCountrySelect","el","nationalNumber","focus","code","find","undefined","priority","areaCodes","flagClass","placeHolder","onInputKeyPress","event","test","key","preventDefault","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","writeValue","countryCode_1","setTimeout","empty","_placeholder","coerceBooleanProperty","setDescribedByIds","ids","join","onContainerClick","target","tagName","nativeElement","querySelector","reset","ngOnDestroy","complete","stopMonitoring","format","formatNational","formatInternational","asYouType","AsYouType","startsWith","previousFormattedNumber","input","mixinErrorState","i0","ɵɵdirectiveInject","i2","FocusMonitor","ElementRef","i3","NgControl","NgForm","FormGroupDirective","i4","selectors","viewQuery","rf","ctx","MatMenu","provide","MatFormFieldControl","useExisting","NG_VALIDATORS","useValue","multi","ɵɵInheritDefinitionFeature","decls","vars","consts","template","Component","selector","templateUrl","styleUrls","providers","Optional","Self","Input","matMenu","ViewChild","HostBinding","Output","shouldLabelFloat","placeholder","required","RsMatIntlTelephoneInputModule","imports","CommonModule","FormsModule","MatInputModule","MatMenuModule","MatButtonModule","MatDividerModule","ReactiveFormsModule","declarations","exports","NgModule"],"mappings":"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ACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,YACJC,GAAI,cACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,WACJC,GAAI,SACJC,GAAI,aACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,aACJC,GAAI,UACJC,GAAI,UACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,QACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YA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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RsMatIntlTelephoneInputService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class CountryCode {\n  public allCountries = [\n    ['Afghanistan (‫افغانستان‬‎)', 'af', '93'],\n    ['Albania (Shqipëri)', 'al', '355'],\n    ['Algeria (‫الجزائر‬‎)', 'dz', '213'],\n    ['American Samoa', 'as', '1684'],\n    ['Andorra', 'ad', '376'],\n    ['Angola', 'ao', '244'],\n    ['Anguilla', 'ai', '1264'],\n    ['Antigua and Barbuda', 'ag', '1268'],\n    ['Argentina', 'ar', '54'],\n    ['Armenia (Հայաստան)', 'am', '374'],\n    ['Aruba', 'aw', '297'],\n    ['Australia', 'au', '61', 0],\n    ['Austria (Österreich)', 'at', '43'],\n    ['Azerbaijan (Azərbaycan)', 'az', '994'],\n    ['Bahamas', 'bs', '1242'],\n    ['Bahrain (‫البحرين‬‎)', 'bh', '973'],\n    ['Bangladesh (বাংলাদেশ)', 'bd', '880'],\n    ['Barbados', 'bb', '1246'],\n    ['Belarus (Беларусь)', 'by', '375'],\n    ['Belgium (België)', 'be', '32'],\n    ['Belize', 'bz', '501'],\n    ['Benin (Bénin)', 'bj', '229'],\n    ['Bermuda', 'bm', '1441'],\n    ['Bhutan (འབྲུག)', 'bt', '975'],\n    ['Bolivia', 'bo', '591'],\n    ['Bosnia and Herzegovina (Босна и Херцеговина)', 'ba', '387'],\n    ['Botswana', 'bw', '267'],\n    ['Brazil (Brasil)', 'br', '55'],\n    ['British Indian Ocean Territory', 'io', '246'],\n    ['British Virgin Islands', 'vg', '1284'],\n    ['Brunei', 'bn', '673'],\n    ['Bulgaria (България)', 'bg', '359'],\n    ['Burkina Faso', 'bf', '226'],\n    ['Burundi (Uburundi)', 'bi', '257'],\n    ['Cambodia (កម្ពុជា)', 'kh', '855'],\n    ['Cameroon (Cameroun)', 'cm', '237'],\n    ['Canada', 'ca', '1', 1, ['204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416', '418', '431', '437',\n      '438', '450', '506', '514', '519', '548', '579', '581', '587', '604', '613', '639', '647', '672', '705', '709', '742',\n      '778', '780', '782', '807', '819', '825', '867', '873', '902', '905']],\n    ['Cape Verde (Kabu Verdi)', 'cv', '238'],\n    ['Caribbean Netherlands', 'bq', '599', 1],\n    ['Cayman Islands', 'ky', '1345'],\n    ['Central African Republic (République centrafricaine)', 'cf', '236'],\n    ['Chad (Tchad)', 'td', '235'],\n    ['Chile', 'cl', '56'],\n    ['China (中国)', 'cn', '86'],\n    ['Christmas Island', 'cx', '61', 2],\n    ['Cocos (Keeling) Islands', 'cc', '61', 1],\n    ['Colombia', 'co', '57'],\n    ['Comoros (‫جزر القمر‬‎)', 'km', '269'],\n    ['Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', 'cd', '243'],\n    ['Congo (Republic) (Congo-Brazzaville)', 'cg', '242'],\n    ['Cook Islands', 'ck', '682'],\n    ['Costa Rica', 'cr', '506'],\n    ['Côte d’Ivoire', 'ci', '225'],\n    ['Croatia (Hrvatska)', 'hr', '385'],\n    ['Cuba', 'cu', '53'],\n    ['Curaçao', 'cw', '599', 0],\n    ['Cyprus (Κύπρος)', 'cy', '357'],\n    ['Czech Republic (Česká republika)', 'cz', '420'],\n    ['Denmark (Danmark)', 'dk', '45'],\n    ['Djibouti', 'dj', '253'],\n    ['Dominica', 'dm', '1767'],\n    ['Dominican Republic (República Dominicana)', 'do', '1', 2, ['809', '829', '849']], ['Ecuador', 'ec', '593'],\n    ['Egypt (‫مصر‬‎)', 'eg', '20'],\n    ['El Salvador', 'sv', '503'],\n    ['Equatorial Guinea (Guinea Ecuatorial)', 'gq', '240'],\n    ['Eritrea', 'er', '291'],\n    ['Estonia (Eesti)', 'ee', '372'],\n    ['Ethiopia', 'et', '251'],\n    ['Falkland Islands (Islas Malvinas)', 'fk', '500'],\n    ['Faroe Islands (Føroyar)', 'fo', '298'],\n    ['Fiji', 'fj', '679'],\n    ['Finland (Suomi)', 'fi', '358', 0],\n    ['France', 'fr', '33'],\n    ['French Guiana (Guyane française)', 'gf', '594'],\n    ['French Polynesia (Polynésie française)', 'pf', '689'],\n    ['Gabon', 'ga', '241'],\n    ['Gambia', 'gm', '220'],\n    ['Georgia (საქართველო)', 'ge', '995'],\n    ['Germany (Deutschland)', 'de', '49'],\n    ['Ghana (Gaana)', 'gh', '233'],\n    ['Gibraltar', 'gi', '350'],\n    ['Greece (Ελλάδα)', 'gr', '30'],\n    ['Greenland (Kalaallit Nunaat)', 'gl', '299'],\n    ['Grenada', 'gd', '1473'],\n    ['Guadeloupe', 'gp', '590', 0],\n    ['Guam', 'gu', '1671'],\n    ['Guatemala', 'gt', '502'],\n    ['Guernsey', 'gg', '44', 1],\n    ['Guinea (Guinée)', 'gn', '224'],\n    ['Guinea-Bissau (Guiné Bissau)', 'gw', '245'],\n    ['Guyana', 'gy', '592'],\n    ['Haiti', 'ht', '509'],\n    ['Honduras', 'hn', '504'],\n    ['Hong Kong (香港)', 'hk', '852'],\n    ['Hungary (Magyarország)', 'hu', '36'],\n    ['Iceland (Ísland)', 'is', '354'],\n    ['India (भारत)', 'in', '91'],\n    ['Indonesia', 'id', '62'],\n    ['Iran (‫ایران‬‎)', 'ir', '98'],\n    ['Iraq (‫العراق‬‎)', 'iq', '964'],\n    ['Ireland', 'ie', '353'],\n    ['Isle of Man', 'im', '44', 2],\n    ['Israel (‫ישראל‬‎)', 'il', '972'],\n    ['Italy (Italia)', 'it', '39', 0],\n    ['Jamaica', 'jm', '1', 4, ['876', '658']], ['Japan (日本)', 'jp', '81'],\n    ['Jersey', 'je', '44', 3],\n    ['Jordan (‫الأردن‬‎)', 'jo', '962'],\n    ['Kazakhstan (Казахстан)', 'kz', '7', 1],\n    ['Kenya', 'ke', '254'],\n    ['Kiribati', 'ki', '686'],\n    ['Kosovo', 'xk', '383'],\n    ['Kuwait (‫الكويت‬‎)', 'kw', '965'],\n    ['Kyrgyzstan (Кыргызстан)', 'kg', '996'],\n    ['Laos (ລາວ)', 'la', '856'],\n    ['Latvia (Latvija)', 'lv', '371'],\n    ['Lebanon (‫لبنان‬‎)', 'lb', '961'],\n    ['Lesotho', 'ls', '266'],\n    ['Liberia', 'lr', '231'],\n    ['Libya (‫ليبيا‬‎)', 'ly', '218'],\n    ['Liechtenstein', 'li', '423'],\n    ['Lithuania (Lietuva)', 'lt', '370'],\n    ['Luxembourg', 'lu', '352'],\n    ['Macau (澳門)', 'mo', '853'],\n    ['Macedonia (FYROM) (Македонија)', 'mk', '389'],\n    ['Madagascar (Madagasikara)', 'mg', '261'],\n    ['Malawi', 'mw', '265'],\n    ['Malaysia', 'my', '60'],\n    ['Maldives', 'mv', '960'],\n    ['Mali', 'ml', '223'],\n    ['Malta', 'mt', '356'],\n    ['Marshall Islands', 'mh', '692'],\n    ['Martinique', 'mq', '596'],\n    ['Mauritania (‫موريتانيا‬‎)', 'mr', '222'],\n    ['Mauritius (Moris)', 'mu', '230'],\n    ['Mayotte', 'yt', '262', 1],\n    ['Mexico (México)', 'mx', '52'],\n    ['Micronesia', 'fm', '691'],\n    ['Moldova (Republica Moldova)', 'md', '373'],\n    ['Monaco', 'mc', '377'],\n    ['Mongolia (Монгол)', 'mn', '976'],\n    ['Montenegro (Crna Gora)', 'me', '382'],\n    ['Montserrat', 'ms', '1664'],\n    ['Morocco (‫المغرب‬‎)', 'ma', '212', 0],\n    ['Mozambique (Moçambique)', 'mz', '258'],\n    ['Myanmar (Burma) (မြန်မာ)', 'mm', '95'],\n    ['Namibia (Namibië)', 'na', '264'],\n    ['Nauru', 'nr', '674'],\n    ['Nepal (नेपाल)', 'np', '977'],\n    ['Netherlands (Nederland)', 'nl', '31'],\n    ['New Caledonia (Nouvelle-Calédonie)', 'nc', '687'],\n    ['New Zealand', 'nz', '64'],\n    ['Nicaragua', 'ni', '505'],\n    ['Niger (Nijar)', 'ne', '227'],\n    ['Nigeria', 'ng', '234'],\n    ['Niue', 'nu', '683'],\n    ['Norfolk Island', 'nf', '672'],\n    ['North Korea (조선 민주주의 인민 공화국)', 'kp', '850'],\n    ['Northern Mariana Islands', 'mp', '1670'],\n    ['Norway (Norge)', 'no', '47', 0],\n    ['Oman (‫عُمان‬‎)', 'om', '968'],\n    ['Pakistan (‫پاکستان‬‎)', 'pk', '92'],\n    ['Palau', 'pw', '680'],\n    ['Palestine (‫فلسطين‬‎)', 'ps', '970'],\n    ['Panama (Panamá)', 'pa', '507'],\n    ['Papua New Guinea', 'pg', '675'],\n    ['Paraguay', 'py', '595'],\n    ['Peru (Perú)', 'pe', '51'],\n    ['Philippines', 'ph', '63'],\n    ['Poland (Polska)', 'pl', '48'],\n    ['Portugal', 'pt', '351'],\n    ['Puerto Rico', 'pr', '1', 3, ['787', '939']], ['Qatar (‫قطر‬‎)', 'qa', '974'],\n    ['Réunion (La Réunion)', 're', '262', 0],\n    ['Romania (România)', 'ro', '40'],\n    ['Russia (Россия)', 'ru', '7', 0],\n    ['Rwanda', 'rw', '250'],\n    ['Saint Barthélemy', 'bl', '590', 1],\n    ['Saint Helena', 'sh', '290'],\n    ['Saint Kitts and Nevis', 'kn', '1869'],\n    ['Saint Lucia', 'lc', '1758'],\n    ['Saint Martin (Saint-Martin (partie française))', 'mf', '590', 2],\n    ['Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', 'pm', '508'],\n    ['Saint Vincent and the Grenadines', 'vc', '1784'],\n    ['Samoa', 'ws', '685'],\n    ['San Marino', 'sm', '378'],\n    ['São Tomé and Príncipe (São Tomé e Príncipe)', 'st', '239'],\n    ['Saudi Arabia (‫المملكة العربية السعودية‬‎)', 'sa', '966'],\n    ['Senegal (Sénégal)', 'sn', '221'],\n    ['Serbia (Србија)', 'rs', '381'],\n    ['Seychelles', 'sc', '248'],\n    ['Sierra Leone', 'sl', '232'],\n    ['Singapore', 'sg', '65'],\n    ['Sint Maarten', 'sx', '1721'],\n    ['Slovakia (Slovensko)', 'sk', '421'],\n    ['Slovenia (Slovenija)', 'si', '386'],\n    ['Solomon Islands', 'sb', '677'],\n    ['Somalia (Soomaaliya)', 'so', '252'],\n    ['South Africa', 'za', '27'],\n    ['South Korea (대한민국)', 'kr', '82'],\n    ['South Sudan (‫جنوب السودان‬‎)', 'ss', '211'],\n    ['Spain (España)', 'es', '34'],\n    ['Sri Lanka (ශ්‍රී ලංකාව)', 'lk', '94'],\n    ['Sudan (‫السودان‬‎)', 'sd', '249'],\n    ['Suriname', 'sr', '597'],\n    ['Svalbard and Jan Mayen', 'sj', '47', 1],\n    ['Swaziland', 'sz', '268'],\n    ['Sweden (Sverige)', 'se', '46'],\n    ['Switzerland (Schweiz)', 'ch', '41'],\n    ['Syria (‫سوريا‬‎)', 'sy', '963'],\n    ['Taiwan (台灣)', 'tw', '886'],\n    ['Tajikistan', 'tj', '992'],\n    ['Tanzania', 'tz', '255'],\n    ['Thailand (ไทย)', 'th', '66'],\n    ['Timor-Leste', 'tl', '670'],\n    ['Togo', 'tg', '228'],\n    ['Tokelau', 'tk', '690'],\n    ['Tonga', 'to', '676'],\n    ['Trinidad and Tobago', 'tt', '1868'],\n    ['Tunisia (‫تونس‬‎)', 'tn', '216'],\n    ['Turkey (Türkiye)', 'tr', '90'],\n    ['Turkmenistan', 'tm', '993'],\n    ['Turks and Caicos Islands', 'tc', '1649'],\n    ['Tuvalu', 'tv', '688'],\n    ['U.S. Virgin Islands', 'vi', '1340'],\n    ['Uganda', 'ug', '256'],\n    ['Ukraine (Україна)', 'ua', '380'],\n    ['United Arab Emirates (‫الإمارات العربية المتحدة‬‎)', 'ae', '971'],\n    ['United Kingdom', 'gb', '44', 0],\n    ['United States', 'us', '1', 0],\n    ['Uruguay', 'uy', '598'],\n    ['Uzbekistan (Oʻzbekiston)', 'uz', '998'],\n    ['Vanuatu', 'vu', '678'],\n    ['Vatican City (Città del Vaticano)', 'va', '39', 1],\n    ['Venezuela', 've', '58'],\n    ['Vietnam (Việt Nam)', 'vn', '84'],\n    ['Wallis and Futuna (Wallis-et-Futuna)', 'wf', '681'],\n    ['Western Sahara (‫الصحراء الغربية‬‎)', 'eh', '212', 1],\n    ['Yemen (‫اليمن‬‎)', 'ye', '967'],\n    ['Zambia', 'zm', '260'],\n    ['Zimbabwe', 'zw', '263'],\n    ['Åland Islands', 'ax', '358', 1]];\n}\n\nexport const Examples: any = {\n  '001': '001',\n  AC: '40123',\n  AD: '312345',\n  AE: '501234567',\n  AF: '701234567',\n  AG: '2684641234',\n  AI: '2642351234',\n  AL: '662123456',\n  AM: '77123456',\n  AO: '923123456',\n  AR: '91123456789',\n  AS: '6847331234',\n  AT: '664123456',\n  AU: '412345678',\n  AW: '5601234',\n  AX: '412345678',\n  AZ: '401234567',\n  BA: '61123456',\n  BB: '2462501234',\n  BD: '1812345678',\n  BE: '470123456',\n  BF: '70123456',\n  BG: '48123456',\n  BH: '36001234',\n  BI: '79561234',\n  BJ: '90011234',\n  BL: '690001234',\n  BM: '4413701234',\n  BN: '7123456',\n  BO: '71234567',\n  BQ: '3181234',\n  BR: '11961234567',\n  BS: '2423591234',\n  BT: '17123456',\n  BW: '71123456',\n  BY: '294911911',\n  BZ: '6221234',\n  CA: '5062345678',\n  CC: '412345678',\n  CD: '991234567',\n  CF: '70012345',\n  CG: '061234567',\n  CH: '781234567',\n  CI: '01234567',\n  CK: '71234',\n  CL: '221234567',\n  CM: '671234567',\n  CN: '13123456789',\n  CO: '3211234567',\n  CR: '83123456',\n  CU: '51234567',\n  CV: '9911234',\n  CW: '95181234',\n  CX: '412345678',\n  CY: '96123456',\n  CZ: '601123456',\n  DE: '15123456789',\n  DJ: '77831001',\n  DK: '32123456',\n  DM: '7672251234',\n  DO: '8092345678',\n  DZ: '551234567',\n  EC: '991234567',\n  EE: '51234567',\n  EG: '1001234567',\n  EH: '650123456',\n  ER: '7123456',\n  ES: '612345678',\n  ET: '911234567',\n  FI: '412345678',\n  FJ: '7012345',\n  FK: '51234',\n  FM: '3501234',\n  FO: '211234',\n  FR: '612345678',\n  GA: '06031234',\n  GB: '7400123456',\n  GD: '4734031234',\n  GE: '555123456',\n  GF: '694201234',\n  GG: '7781123456',\n  GH: '231234567',\n  GI: '57123456',\n  GL: '221234',\n  GM: '3012345',\n  GN: '601123456',\n  GP: '690001234',\n  GQ: '222123456',\n  GR: '6912345678',\n  GT: '51234567',\n  GU: '6713001234',\n  GW: '955012345',\n  GY: '6091234',\n  HK: '51234567',\n  HN: '91234567',\n  HR: '921234567',\n  HT: '34101234',\n  HU: '201234567',\n  ID: '812345678',\n  IE: '850123456',\n  IL: '502345678',\n  IM: '7924123456',\n  IN: '8123456789',\n  IO: '3801234',\n  IQ: '7912345678',\n  IR: '9123456789',\n  IS: '6111234',\n  IT: '3123456789',\n  JE: '7797712345',\n  JM: '8762101234',\n  JO: '790123456',\n  JP: '9012345678',\n  KE: '712123456',\n  KG: '700123456',\n  KH: '91234567',\n  KI: '72001234',\n  KM: '3212345',\n  KN: '8697652917',\n  KP: '1921234567',\n  KR: '1000000000',\n  KW: '50012345',\n  KY: '3453231234',\n  KZ: '7710009998',\n  LA: '2023123456',\n  LB: '71123456',\n  LC: '7582845678',\n  LI: '660234567',\n  LK: '712345678',\n  LR: '770123456',\n  LS: '50123456',\n  LT: '61234567',\n  LU: '628123456',\n  LV: '21234567',\n  LY: '912345678',\n  MA: '650123456',\n  MC: '612345678',\n  MD: '62112345',\n  ME: '67622901',\n  MF: '690001234',\n  MG: '321234567',\n  MH: '2351234',\n  MK: '72345678',\n  ML: '65012345',\n  MM: '92123456',\n  MN: '88123456',\n  MO: '66123456',\n  MP: '6702345678',\n  MQ: '696201234',\n  MR: '22123456',\n  MS: '6644923456',\n  MT: '96961234',\n  MU: '52512345',\n  MV: '7712345',\n  MW: '991234567',\n  MX: '12221234567',\n  MY: '123456789',\n  MZ: '821234567',\n  NA: '811234567',\n  NC: '751234',\n  NE: '93123456',\n  NF: '381234',\n  NG: '8021234567',\n  NI: '81234567',\n  NL: '612345678',\n  NO: '40612345',\n  NP: '9841234567',\n  NR: '5551234',\n  NU: '8884012',\n  NZ: '211234567',\n  OM: '92123456',\n  PA: '61234567',\n  PE: '912345678',\n  PF: '87123456',\n  PG: '70123456',\n  PH: '9051234567',\n  PK: '3012345678',\n  PL: '512345678',\n  PM: '551234',\n  PR: '7872345678',\n  PS: '599123456',\n  PT: '912345678',\n  PW: '6201234',\n  PY: '961456789',\n  QA: '33123456',\n  RE: '692123456',\n  RO: '712034567',\n  RS: '601234567',\n  RU: '9123456789',\n  RW: '720123456',\n  SA: '512345678',\n  SB: '7421234',\n  SC: '2510123',\n  SD: '911231234',\n  SE: '701234567',\n  SG: '81234567',\n  SH: '51234',\n  SI: '31234567',\n  SJ: '41234567',\n  SK: '912123456',\n  SL: '25123456',\n  SM: '66661212',\n  SN: '701234567',\n  SO: '71123456',\n  SR: '7412345',\n  SS: '977123456',\n  ST: '9812345',\n  SV: '70123456',\n  SX: '7215205678',\n  SY: '944567890',\n  SZ: '76123456',\n  TA: '8999',\n  TC: '6492311234',\n  TD: '63012345',\n  TG: '90112345',\n  TH: '812345678',\n  TJ: '917123456',\n  TK: '7290',\n  TL: '77212345',\n  TM: '66123456',\n  TN: '20123456',\n  TO: '7715123',\n  TR: '5012345678',\n  TT: '8682911234',\n  TV: '901234',\n  TW: '912345678',\n  TZ: '621234567',\n  UA: '501234567',\n  UG: '712345678',\n  US: '2015550123',\n  UY: '94231234',\n  UZ: '912345678',\n  VA: '3123456789',\n  VC: '7844301234',\n  VE: '4121234567',\n  VG: '2843001234',\n  VI: '3406421234',\n  VN: '912345678',\n  VU: '5912345',\n  WF: '501234',\n  WS: '7212345',\n  XK: '43201234',\n  YE: '712345678',\n  YT: '639012345',\n  ZA: '711234567',\n  ZM: '955123456',\n  ZW: '712345678'\n};\n","import { FormControl } from '@angular/forms';\nimport { parsePhoneNumber, PhoneNumber } from 'libphonenumber-js';\n\nexport const phoneNumberValidator = (control: FormControl) => {\n    const error = { validatePhoneNumber: true };\n    let numberInstance: PhoneNumber;\n    if (control.value) {\n        try {\n            numberInstance = parsePhoneNumber(control.value);\n        } catch (e) {\n            control.setValue(null);\n            return error;\n        }\n\n        if (numberInstance && !numberInstance.isValid()) {\n            control.setValue(null);\n            if (!control.touched) {\n                control.markAsTouched();\n            }\n            return error;\n        }\n    }\n    return null;\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Country } from './../model/country.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  // country | search:'searchCriteria'\n  transform(country: Country, searchCriteria?: string): boolean {\n    if (!searchCriteria || searchCriteria === '') {\n      return true;\n    }\n\n    return `${country.name}+${country.dialCode}`\n      .toLowerCase()\n      .includes(\n        searchCriteria.toLowerCase()\n      );\n  }\n\n}\n","<div class=\"ngx-mat-tel-input-container\">\n    <button type=\"button\" mat-button [matMenuTriggerFor]=\"menu\" class=\"country-selector\">\n        <span class=\"country-selector-flag flag\" [ngClass]=\"selectedCountry.flagClass\"></span>\n        <span class=\"country-selector-code\" *ngIf=\"selectedCountry?.dialCode\">+{{selectedCountry.dialCode}}</span>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <input *ngIf=\"enableSearch\" class=\"country-search\" [(ngModel)]=\"searchCriteria\" type=\"text\"\n            [placeholder]=\"searchPlaceholder\" (click)=\"$event.stopPropagation()\" />\n        <button type=\"button\" mat-menu-item class=\"country-list-button\"\n            *ngFor=\"let country of preferredCountriesInDropDown\" (click)=\"onCountrySelect(country, focusable)\">\n            <div class=\"icon-wrapper\">\n                <div class=\"flag\" [ngClass]=\"country.flagClass\"></div>\n            </div>\n            <div class=\"label-wrapper\">{{country.name}} <span *ngIf=\"country?.dialCode\">+{{country.dialCode}}</span>\n            </div>\n        </button>\n        <mat-divider *ngIf=\"preferredCountriesInDropDown?.length\"></mat-divider>\n        <ng-container *ngFor=\"let country of allCountries\">\n            <button type=\"button\" mat-menu-item class=\"country-list-button\" *ngIf=\"country | search:searchCriteria\"\n                (click)=\"onCountrySelect(country, focusable)\">\n                <div class=\"icon-wrapper\">\n                    <div class=\"flag\" [ngClass]=\"country.flagClass\"></div>\n                </div>\n                <div class=\"label-wrapper\">{{country.name}} +{{country.dialCode}}</div>\n            </button>\n        </ng-container>\n    </mat-menu>\n\n    <input matInput type=\"tel\" autocomplete=\"off\" [ngClass]=\"cssClass\" (blur)=\"onTouched()\"\n        (keypress)=\"onInputKeyPress($event)\" [(ngModel)]=\"phoneNumber\" (ngModelChange)=\"onPhoneNumberChange()\"\n        [errorStateMatcher]=\"errorStateMatcher\" [placeholder]=\"inputPlaceholder\" [disabled]=\"disabled\" #focusable>\n</div>","import { MatFormFieldControl } from '@angular/material/form-field';\nimport {\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  ViewChild\n} from '@angular/core';\n\nimport { FormGroupDirective, NG_VALIDATORS, NgControl, NgForm } from '@angular/forms';\nimport { CountryCode, Examples } from './data/country-code';\nimport { phoneNumberValidator } from './validators/phoneNumber.validator';\nimport { Country } from './model/country.model';\nimport { PhoneNumberFormat } from './model/phone-number-format.model';\nimport { AsYouType, CountryCode as CC, E164Number, getExampleNumber, parsePhoneNumberFromString, PhoneNumber } from 'libphonenumber-js';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { CanUpdateErrorState, CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { MatMenu } from '@angular/material/menu';\n\nclass NgxMatIntlTelInputBase {\n  // tslint:disable-next-line:variable-name\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n    // tslint:disable-next-line:variable-name\n    public _parentForm: NgForm,\n    // tslint:disable-next-line:variable-name\n    public _parentFormGroup: FormGroupDirective,\n    /** @docs-private */\n    public ngControl: NgControl) {\n  }\n}\n\n// tslint:disable-next-line:variable-name\nconst _NgxMatIntlTelInputMixinBase: CanUpdateErrorStateCtor & typeof NgxMatIntlTelInputBase =\n  mixinErrorState(NgxMatIntlTelInputBase);\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'rs-mat-intl-telephone-input',\n  templateUrl: './rs-mat-intl-telephone-input.component.html',\n  styleUrls: ['./rs-mat-intl-telephone-input.component.css'],\n  providers: [\n    CountryCode,\n    { provide: MatFormFieldControl, useExisting: RsMatIntlTelephoneInputComponent },\n    {\n      provide: NG_VALIDATORS,\n      useValue: phoneNumberValidator,\n      multi: true,\n    }\n  ]\n})\n\nexport class RsMatIntlTelephoneInputComponent extends _NgxMatIntlTelInputMixinBase\n  implements OnInit, OnDestroy, DoCheck, CanUpdateErrorState, MatFormFieldControl<any> {\n  static nextId = 0;\n\n  @Input() preferredCountries: Array<string> = [];\n  @Input() enablePlaceholder = true;\n  @Input() inputPlaceholder: string = '';\n  @Input() cssClass = '';\n  @Input() name: string = '';\n  @Input() onlyCountries: Array<string> = [];\n  @Input() errorStateMatcher: ErrorStateMatcher = new ErrorStateMatcher();\n  @Input() enableSearch = false;\n  @Input() searchPlaceholder: string = '';\n\n  @Input()\n  get format(): PhoneNumberFormat {\n    return this._format;\n  }\n\n  set format(value: PhoneNumberFormat) {\n    this._format = value;\n    this.phoneNumber = this.formattedPhoneNumber;\n    this.stateChanges.next();\n  }\n\n  @ViewChild(MatMenu) matMenu: MatMenu | undefined;\n  // tslint:disable-next-line:variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line:variable-name\n  private _required = false;\n  // tslint:disable-next-line:variable-name\n  private _disabled = false;\n  stateChanges = new Subject<void>();\n  focused = false;\n  @HostBinding() id = `rs-mat-intl-telephone-input-${RsMatIntlTelephoneInputComponent.nextId++}`;\n  describedBy = '';\n  phoneNumber: E164Number = '';\n  allCountries: Array<Country> = [];\n  preferredCountriesInDropDown: Array<Country> = [];\n  selectedCountry: Country;\n  numberInstance: PhoneNumber;\n  value;\n  searchCriteria: string;\n  @Output()\n  countryChanged: EventEmitter<Country> = new EventEmitter<Country>();\n\n  private previousFormattedNumber: string;\n  // tslint:disable-next-line:variable-name\n  private _format: PhoneNumberFormat = 'default';\n\n  static getPhoneNumberPlaceHolder(countryISOCode: any): string {\n    try {\n      return getExampleNumber(countryISOCode, Examples).number.toString();\n    } catch (e) {\n      return e;\n    }\n  }\n\n  onTouched = () => {\n  };\n\n  propagateChange = (_: any) => {\n  };\n\n  constructor(\n    private countryCodeData: CountryCode,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl,\n    // tslint:disable-next-line:variable-name\n    @Optional() _parentForm: NgForm,\n    // tslint:disable-next-line:variable-name\n    @Optional() _parentFormGroup: FormGroupDirective,\n    // tslint:disable-next-line:variable-name\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    fm.monitor(elRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n    this.fetchCountryData();\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.searchPlaceholder) {\n      this.searchPlaceholder = 'Search ...';\n    }\n    if (this.preferredCountries.length) {\n      this.preferredCountries.forEach(iso2 => {\n        const preferredCountry = this.allCountries.filter((c) => {\n          return c.iso2 === iso2;\n        }).shift();\n        this.preferredCountriesInDropDown.push(preferredCountry);\n      });\n    }\n    if (this.onlyCountries.length) {\n      this.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\n    }\n    if (this.numberInstance && this.numberInstance.country) {\n      // If an existing number is present, we use it to determine selectedCountry\n      this.selectedCountry = this.getCountry(this.numberInstance.country);\n    } else {\n      if (this.preferredCountriesInDropDown.length) {\n        this.selectedCountry = this.preferredCountriesInDropDown[0];\n      } else {\n        this.selectedCountry = this.allCountries[0];\n      }\n    }\n    this.countryChanged.emit(this.selectedCountry);\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  public onPhoneNumberChange(): void {\n    try {\n      this.numberInstance = parsePhoneNumberFromString(this.phoneNumber.toString(), this.selectedCountry.iso2.toUpperCase() as CC);\n      this.formatAsYouTypeIfEnabled();\n      this.value = this.numberInstance.number;\n      if (this.numberInstance && this.numberInstance.isValid()) {\n        if (this.phoneNumber !== this.formattedPhoneNumber) {\n          this.phoneNumber = this.formattedPhoneNumber;\n        }\n        if (this.selectedCountry.iso2 !== this.numberInstance.country) {\n          this.selectedCountry = this.getCountry(this.numberInstance.country);\n          this.countryChanged.emit(this.selectedCountry);\n        }\n      }\n    } catch (e) {\n      // if no possible numbers are there,\n      // then the full number is passed so that validator could be triggered and proper error could be shown\n      this.value = this.phoneNumber.toString();\n    }\n    this.propagateChange(this.value);\n  }\n\n  public onCountrySelect(country: Country, el): void {\n    if (this.phoneNumber) {\n      this.phoneNumber = this.numberInstance.nationalNumber;\n    }\n    this.selectedCountry = country;\n    this.countryChanged.emit(this.selectedCountry);\n    this.onPhoneNumberChange();\n    el.focus();\n  }\n\n  public getCountry(code) {\n    return this.allCountries.find(c => c.iso2 === code.toLowerCase()) || {\n      name: 'UN',\n      iso2: 'UN',\n      dialCode: undefined,\n      priority: 0,\n      areaCodes: undefined,\n      flagClass: 'UN',\n      placeHolder: ''\n    };\n  }\n\n  public onInputKeyPress(event): void {\n    const pattern = /[0-9+\\- ]/;\n    if (!pattern.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  protected fetchCountryData(): void {\n    this.countryCodeData.allCountries.forEach(c => {\n      const country: Country = {\n        name: c[0].toString(),\n        iso2: c[1].toString(),\n        dialCode: c[2].toString(),\n        priority: +c[3] || 0,\n        areaCodes: c[4] as string[] || undefined,\n        flagClass: c[1].toString().toUpperCase(),\n        placeHolder: ''\n      };\n\n      if (this.enablePlaceholder) {\n        country.placeHolder = RsMatIntlTelephoneInputComponent.getPhoneNumberPlaceHolder(country.iso2.toUpperCase());\n      }\n\n      this.allCountries.push(country);\n    });\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(value: string): void {\n    if (value && typeof value === 'string') {\n      this.numberInstance = parsePhoneNumberFromString(value);\n      if (this.numberInstance) {\n        const countryCode = this.numberInstance.country;\n        this.phoneNumber = this.formattedPhoneNumber;\n        if (!countryCode) {\n          return;\n        }\n        setTimeout(() => {\n          this.selectedCountry = this.getCountry(countryCode);\n          if (this.selectedCountry.dialCode && !this.preferredCountries.includes(this.selectedCountry.iso2)) {\n            this.preferredCountriesInDropDown.push(this.selectedCountry);\n          }\n          this.countryChanged.emit(this.selectedCountry);\n        }, 1);\n      } else {\n        this.phoneNumber = value;\n      }\n    }\n  }\n\n  get empty() {\n    return !this.phoneNumber;\n  }\n\n  @HostBinding('class.ngx-floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      // tslint:disable-next-line:no-non-null-assertion\n      this.elRef.nativeElement.querySelector('input')!.focus();\n    }\n  }\n\n  reset() {\n    this.phoneNumber = '';\n    this.propagateChange(null);\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef);\n  }\n\n  private get formattedPhoneNumber(): string {\n    if (!this.numberInstance) {\n      return this.phoneNumber.toString();\n    }\n    switch (this.format) {\n      case 'national':\n        return this.numberInstance.formatNational();\n      case 'international':\n        return this.numberInstance.formatInternational();\n      default:\n        return this.numberInstance.nationalNumber.toString();\n    }\n  }\n\n  private formatAsYouTypeIfEnabled(): void {\n    if (this.format === 'default') {\n      return;\n    }\n    const asYouType: AsYouType = new AsYouType(this.selectedCountry.iso2.toUpperCase() as CC);\n    // To avoid caret positioning we apply formatting only if the caret is at the end:\n    if (this.phoneNumber.toString().startsWith(this.previousFormattedNumber || '')) {\n      this.phoneNumber = asYouType.input(this.phoneNumber.toString());\n    }\n    this.previousFormattedNumber = this.phoneNumber.toString();\n  }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { RsMatIntlTelephoneInputComponent } from './rs-mat-intl-telephone-input.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\n\n\n@NgModule({\n  declarations: [RsMatIntlTelephoneInputComponent, SearchPipe],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDividerModule,\n    ReactiveFormsModule\n  ],\n  exports: [RsMatIntlTelephoneInputComponent]\n})\nexport class RsMatIntlTelephoneInputModule { }\n"]}